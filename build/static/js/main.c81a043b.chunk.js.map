{"version":3,"sources":["components/Form.js","components/Task.js","components/Tasks.js","components/App.js","index.js"],"names":["Form","state","taskName","taskDescription","submitTask","e","name","description","props","addTask","preventDefault","onSubmit","this","className","onChange","setState","target","value","id","type","placeholder","autoComplete","spellcheck","onClick","Component","Task","styleDone","borderColor","task","done","boxShadow","removeTask","style","checked","completeTask","bind","Tasks","taskList","map","App","tasks","counter","filter","taskElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c81a043b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        taskName: \"\",\r\n        taskDescription: \"\"\r\n    }\r\n\r\n    submitTask = (e) => {\r\n        let name = this.state.taskName;\r\n        let description = this.state.taskDescription;\r\n        this.props.addTask(name, description);\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitTask} className=\"taskForm\">\r\n                <div>\r\n                    <input onChange={e => this.setState({taskName: e.target.value})} id=\"inputName\" type=\"text\" placeholder=\"Name Of Your Task\" autoComplete=\"off\" spellcheck=\"false\"/>\r\n                    <input onChange={e => this.setState({taskDescription: e.target.value})} id=\"inputDescription\" type=\"text\" placeholder=\"Description Of Your Task\" autoComplete=\"off\" spellcheck=\"false\"/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"button\" value=\"Add Task\" onClick={this.submitTask}/>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport './Task.css';\r\n\r\nclass Task extends Component {\r\n\r\n    styleDone = () => {\r\n        return {\r\n            borderColor: (this.props.task.done) ? \"#00ccff\" : \"#ffffff\",\r\n            boxShadow: (this.props.task.done) ? \"inset 0 0 1vh #00ccff, 0 0 1vh #00ccff\" : \"inset 0 0 1vh #ffffff, 0 0 1vh #ffffff\",\r\n        }\r\n    }\r\n\r\n    removeTask = () => {\r\n        this.props.removeTask(this.props.task);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"task\" style={this.styleDone()}>\r\n                <div className=\"taskControls\">\r\n                    <input type=\"checkbox\" checked={this.props.task.done} onChange={this.props.completeTask.bind(this, this.props.task)}></input>\r\n                    <input type=\"button\" value=\"X\" onClick={this.removeTask}></input>\r\n                </div>\r\n                <div className=\"taskInfo\">\r\n                    <h2>{this.props.task.name}</h2>\r\n                    <p>{this.props.task.description}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport './Tasks.css'\r\nimport Task from './Task';\r\n\r\nclass Tasks extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"taskList\">\r\n                {this.props.taskList.map(e => <Task key={e.id} task={e} removeTask={this.props.removeTask} completeTask={this.props.completeTask}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Tasks from './Tasks';\n\n\nclass App extends Component {\n\n    state = {\n        tasks: [],\n        counter: 0\n    }\n\n    addTask = (name, description) => {\n        let task = {\n            id: this.state.counter,\n            done: false,\n            name: name,\n            description: description\n        }\n        this.setState({tasks: [...this.state.tasks, task], counter: this.state.counter + 1});\n    }\n\n    removeTask = (task) => {\n        this.setState({tasks: this.state.tasks.filter(taskElement => taskElement.id !== task.id)});\n    }\n\n    completeTask = (task) => {\n        this.setState({tasks: this.state.tasks.map(taskElement => {\n            taskElement.done = (taskElement.id === task.id) ? !taskElement.done : taskElement.done;\n            return taskElement;\n        })});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                {/* <button onClick={this.removeTask.bind(this, this.state.tasks[0])}>Remove A Task</button>\n                <button onClick={this.completeTask.bind(this, this.state.tasks[0])}>Complete A Task</button> */}\n                <Form taskList={this.state.tasks} addTask={this.addTask}/>\n                <Tasks taskList={this.state.tasks} removeTask={this.removeTask} completeTask={this.completeTask}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}